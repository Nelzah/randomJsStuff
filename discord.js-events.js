	client
  
  	// Discord.js Commando
	.on('commandBlock', async (message,reason,data) => {})
	.on('commandCancel', async (command,reason,message,result) => {})
	.on('commandError', async (command,err,message,args,fromPattern,result) => {})
	.on('commandPrefixChange', async (guild,prefix) => {})
	.on('commandRegister', async (command,registry) => {})
	.on('commandReregister', async (newCommand,oldCommand) => {})
	.on('commandRun', async (command,promise,message,args,fromPattern,result) => {})
	.on('commandStatusChange', async (guild,command,enabled) => {})
	.on('commandUnregister', async (command) => {})
	.on('groupRegister', async (group,registry) => {})
	.on('groupStatusChange', async (guild,group,enabled) => {})
	.on('providerReady', async (provider) => {})
	.on('typeRegister', async (tyoe,registry) => {})
	.on('unknownCommand', async (message) => {})

	// Discord.js
	.on('channelCreate', async (channel) => {})
	.on('channelDelete', async (channel) => {})
	.on('channelPinsUpdate', async (channel,time) => {})
	.on('channelUpdate', async (oldChannel,newChannel) => {})
	.on('debug', async (info) => {})
	.on('emojiCreate', async (emoji) => {})
	.on('emojiDelete', async (emoji) => {})
	.on('emojiUpdate', async (oldEmoji,newEmoji) => {})
	.on('error', async (error) => {})
	.on('guildBanAdd', async (guild,user) => {})
	.on('guildBanRemove', async (guild,user) => {})
	.on('guildCreate', async (guild) => {})
	.on('guildDelete', async (guild) => {})
	.on('guildIntegrationsUpdate', async (guild) => {})
	.on('guildMemberAdd', async (member) => {})
	.on('guildMemberAvailable', async (member) => {})
	.on('guildMemberRemove', async (member) => {})
	.on('guildMembersChunk', async (members,guild,chunk) => {})
	.on('guildMemberSpeaking', async (member,speaking) => {})
	.on('guildMemberUpdate', async (oldMember,newMember) => {})
	.on('guildUnavailable', async (guild) => {})
	.on('guildUpdate', async (oldGuild,newGuild) => {})
	.on('invalidated', async () => {})
	.on('inviteCreate', async (invite) => {})
	.on('inviteDelete', async (invite) => {})
	.on('message', async (message) => {})
	.on('messageDelete', async (message) => {})
	.on('messageDeleteBulk', async (messages) => {})
	.on('messageReactionAdd', async (messageReaction,user) => {})
	.on('messageReactionRemove', async (messageReaction,user) => {})
	.on('messageReactionRemoveAll', async (message) => {})
	.on('messageReactionRemoveEmoji', async (reaction) => {})
	.on('messageUpdate', async (oldMessage,newMessage) => {})
	.on('presenceUpdate', async (oldPresence,newPresence) => {})
	.on('rateLimit', async (rateLimitInfo) => {})
	.on('ready', async () => {})
	.on('roleCreate', async (role) => {})
	.on('roleDelete', async (role) => {})
	.on('roleUpdate', async (oldRole,newRole) => {})
	.on('shardDisconnect', async (event,id) => {})
	.on('shardError', async (error,shardID) => {})
	.on('shardReady', async (id,unavailableGuilds) => {})
	.on('shardReconnecting', async (id) => {})
	.on('shardResume', async (id,replayedEvents) => {})
	.on('typingStart', async (channel,user) => {})
	.on('userUpdate', async (oldUser,newUser) => {})
	.on('voiceStateUpdate', async (oldState,newState) => {})
	.on('warn', async (info) => {})
	.on('webhookUpdate', async (channel) => {})
